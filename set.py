# set - множество
# множество - это контейнер, который содержит НЕ повторяющиеся переменные
# set frozenset - отличие в том, что set - это изменяемый тип данных, а frozenset - нет.
# set используют для получения уникальных элементов из списка

    # Инициализаци {}
temp_set = {}
print(type(temp_set), temp_set)
# таким образом, если множество set пустое, то выведется не множество а dict (словарь). Так решили разработчики.
# но если множество наполниить, то выведется множество:
temp_set = {1,2,3,5,4,5,6,9,44,5}
print(type(temp_set), temp_set)
# можно тип list инициализировать в тип set:
temp_list = [1,2,3,5,4,6,2,1,2,5,4,2]
temp_set = set(temp_list)
print(type(temp_set), temp_set)

    # Обращение к элементам множества
# можно проверить есть ли какое то значение в множестве. Результат - True или False:
print(1 in temp_set)
# можно проитерироваться по элементам множества. У элементов множества нет индексов, поэтому итерироваться нужно так:
for element in temp_set:
    print(element)
# порядок может быть разным. Поэтому нельзя использовать упорядоченность в объекте set!!!

    # Функции с множествами
#-------- стандартные

    # Операции с множествами
# Пересечение, объединение, разность, симметрическая разность
# Union - объединение
my_set_1 = set([1,2,3,5,4,6,9,8,2,123])
my_set_2 = set([1,2,5,9,7])
my_set_1 = my_set_1.union(my_set_2)
print(my_set_1)
# Difference - разность
my_set_1 = set([1,2,3,5,4,6,9,8,2,123])
my_set_2 = set([1,2,5,9,7])
my_set_3 = my_set_1.difference(my_set_2)
print(my_set_3)


